openapi: 3.0.0
info:
  title: Stew Nudge API
  version: 1.0.0
  description: API for Stew Nudge Application
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '204':
          description: User deleted

  /tasks:
    get:
      summary: Get all tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The task ID
      responses:
        '200':
          description: A single task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      summary: Update a task by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The task ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      summary: Delete a task by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The task ID
      responses:
        '204':
          description: Task deleted

  /tasks/users/{uid}:
    get:
      summary: Get tasks by user ID
      parameters:
        - in: path
          name: uid
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '200':
          description: A list of tasks for a specific user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: '1'
        name:
          type: string
          example: 'John Doe'
        email:
          type: string
          example: 'john.doe@example.com'
        createdAt:
          type: string
          format: date-time
          example: '2023-06-02T00:00:00Z'
        updatedAt:
          type: string
          format: date-time
          example: '2023-06-02T00:00:00Z'
    Task:
      type: object
      properties:
        id:
          type: string
          example: '1'
        title:
          type: string
          example: 'Finish documentation'
        description:
          type: string
          example: 'Complete the OpenAPI documentation for the project'
        status:
          type: string
          example: 'in-progress'
        userId:
          type: string
          example: '1'
        createdAt:
          type: string
          format: date-time
          example: '2023-06-02T00:00:00Z'
        updatedAt:
          type: string
          format: date-time
          example: '2023-06-02T00:00:00Z'
